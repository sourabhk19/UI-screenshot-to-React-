{
  "opening-tag": "{",
  "closing-tag": "}", 
  "body":” import { Button, Checkbox, Accordion, Breadcrumb, Codesnippet, RadioButton } from 'carbon-components-react';import React, { Component } from 'react'; class App  extends Component { render() { return ( {} ); }}",

  "accordion":"<Accordion align="end"> {} </Accordion>",

  "accordionItem":"<AccordionItem onClick={function noRefCheck(){}} onHeadingClick={function noRefCheck(){}} title="Section 1 title"> </AccordionItem>",

  "btn-primary":"<Button disabled={false} href=”” iconDescription="Button icon" kind="primary" onClick={function noRefCheck(){}} onFocus={function noRefCheck(){}} renderIcon={undefined} size="default" tabIndex={0} type="button"> [] </Button>",

  "btn-secondary":"<Button disabled={false} href=”” iconDescription="Button icon" kind="secondary" onClick={function noRefCheck(){}} onFocus={function noRefCheck(){}} renderIcon={undefined} size="default" tabIndex={0} type="button"> [] </Button>",

  "btn-danger":"<Button disabled={false} href=”” iconDescription="Button icon" kind="danger" onClick={function noRefCheck(){}} onFocus={function noRefCheck(){}} renderIcon={undefined} size="default" tabIndex={0} type="button"> [] </Button>",

  "btn-ghost":"<Button disabled={false} href=”” iconDescription="Button icon" kind="ghost" onClick={function noRefCheck(){}} onFocus={function noRefCheck(){}} renderIcon={undefined} size="default" tabIndex={0} type="button"> [] </Button>",

  "btn-tertiary":"<Button disabled={false} href=”” iconDescription="Button icon" kind="tertiary" onClick={function noRefCheck(){}} onFocus={function noRefCheck(){}} renderIcon={undefined} size="default" tabIndex={0} type="button"> [] </Button>",

"text-input":"<TextInput defaultValue="This is not a default value" disabled={false} helperText="Optional helper text." id="test2" invalid={false} invalidText="A valid value is required" labelText="Text Input label" light={false} onChange={function noRefCheck(){}} onClick={function noRefCheck(){}} placeholder="Placeholder text" size={undefined} type="text" />,"

  "form":"<Form onSubmit={function noRefCheck(){}}
> {} </Form>",

  "formgroup": "<FormGroup invalid={false} legendText="Checkbox heading" message={false} messageText="" > {} </FormGroup>",

  "modal":"<Modal hasScrollingContent={false} iconDescription="Close" modalAriaLabel="A label to be read by screen readers on the modal root node" modalHeading="Modal heading" modalLabel="Label" onBlur={function noRefCheck(){}} onClick={function noRefCheck(){}} onFocus={function noRefCheck(){}} onKeyDown={function noRefCheck(){}} onRequestClose={function noRefCheck(){}} onRequestSubmit={function noRefCheck(){}} onSecondarySubmit={function noRefCheck(){}} open passiveModal={false} primaryButtonDisabled={false} primaryButtonText="Primary Button" secondaryButtonText="Secondary Button" selectorPrimaryFocus="[data-modal-primary-focus]" size={undefined} shouldSubmitOnEnter > {} </Modal>",

"RadioButton":"<RadioButton labelPosition="right"labelText="Standard Radio Button" name="test" onChange={function noRefCheck(){}} value="standard" />",

"Checkbox”:"   className="some-class"
  defaultChecked
  id="checkbox-0"
  indeterminate={false}
  labelText="Checkbox label"
  onChange={function noRefCheck(){}}",

  "paragraph":"<p> [] </p>",
  
  "RadioButtonenabled":"<RadioButton labelText=[] value='default-selected'/>",
  "header":"<h2> [] </h2>",
  "select":"<Select labelText=[] defaultValue=[] invalidText=[]> {} </Select>",
  "selectgroup":"<SelectItemGroup label=[] > {} </SelectItemGroup>",
  "selectitem":"<SelectItem text=[] value=[]/>",
  "breadcrumb":"<Breadcrumb> <BreadcrumbItem>{}</BreadcrumbItem> </Breadcrumb>",
  "breadcrumb-notrailing-slash":"<Breadcrumb noTrailingSlash> <BreadcrumbItem> {} </BreadcrumbItem> </Breadcrumb>",
  
  "Checkbox-unchecked":"<Checkbox labelText=[]/>",
  "CodeSnippet":"<CodeSnippet>[]</CodeSnippet>",
  "CodeSnippet_inline":"<CodeSnippet type='inline'>[]</CodeSnippet>",
  "CodeSnippet_multi":"<CodeSnippet type='multi'>[]</CodeSnippet>",
  "ContextSwitcher":"<ContentSwitcher onChange=[]> <Switch name=[] text=[] /></ContentSwitcher>",
  "Search":"<Search placeHolderText=[]/>",
  "SelectItem":"<SelectItem text=[] value=[] />",
  "Slider":"<Slider max=[] min=[] step=[] stepMuliplier=[] />",
  "Toggle":"<Toggle defaultToggled labelText='Text'/>",
  "Dropdown":"< Dropdown ariaLabel="Dropdown" direction="bottom" disabled={false} helperText="This is not some helper text." id="carbon-dropdown-example" invalidText="A valid value is required"
itemToElement={null} itemToString={function noRefCheck(){}}
items={[]} label="Dropdown menu options" light={false} onChange={function noRefCheck(){}} size={undefined} titleText="This is not a dropdown title."
 type="default"
/>”
}

